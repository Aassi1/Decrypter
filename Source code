#include <stdio.h>
#include <string.h>


void encryptCaesar(char*, unsigned char);
void decryptCaesar(char*, unsigned char);
void decryptCeaser_WK(char *);
void toUpper(char*);

int main() {
  char plain[] = "Friends, Romans, countrymen, lend me your ears";
  char cipher[] = "Mvez, mzuz, mztz (Z trdv, Z jrn, Z tfehlvivu)";

  printf("%s\n", plain);
  toUpper(plain);
  printf("%s\n", plain);
  encryptCaesar(plain, 5);
  printf("%s\n", plain);
  decryptCaesar(plain, 5);
  printf("%s\n", plain);
  encryptCaesar(plain,5);

  printf("\n\nDecrypting without key :  \n\n%s\n",plain);
  decryptCeaser_WK(plain);
  // printf("%s\n",plain);
  return 0;
}

void toUpper(char *text) {
  int i = 0;
  while (text[i] != '\0') {
    if (text[i] >= 'a' && text[i] <= 'z') {
      text[i] -= 32;
    }
    i++;
  }
}

void encryptCaesar(char *plaintext, unsigned char key) {
  toUpper(plaintext);

  int i = 0;
  while (plaintext[i] != '\0'){
    if (plaintext[i] >= 'A' && plaintext[i <= 'Z']){
      plaintext[i] = ((plaintext[i] - 'A' + key) % 26) + 'A';
    }
  i++;
  }
}

void decryptCaesar(char *ciphertext, unsigned char key) {
  toUpper(ciphertext);

  int i = 0;
  while (ciphertext[i] != '\0'){
    if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z'){
      ciphertext[i] = ((ciphertext[i] - 'A' - key + 26 )%26) + 'A';
    }
    i++;
  }
}

void decryptCeaser_WK(char *ciphertext){
  toUpper(ciphertext);

  int length = strlen(ciphertext);

  for (int key = 0; key < 26; key++){
    printf("\nKey : %d \n", key);
    char buffer[200];

    for (int i  = 0; i < length ; i++){

      if (ciphertext[i] == ' ' || ciphertext[i] == ','){
        buffer[i] = ciphertext[i];
      }
      if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z'){
        buffer[i] = ((ciphertext[i] - 'A' - key + 26 )%26) + 'A';
      }
    }
    printf("\nDecrypted Phrase : %s\n", buffer);
    printf("\n");
  }
}
